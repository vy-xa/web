@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes float {
    0% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0); }
}

* {
    cursor: url(cursor.png) 16 16, auto !important;
}

::-moz-selection {
    background: #ff0000;
    color: #ffffff;
}

::selection {
    background: #ff0000;
    color: #ffffff;
}

body, * {
    font-family: 'Poppins', sans-serif!important;
    color: #ffffff;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #2b0000; /* Darker background color */
    animation: fadeIn 2s ease-in-out;
}

.container {
    text-align: center;
    background-color: rgba(100, 0, 0, 0.8); /* Darker red background */
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(100, 0, 0, 0.6); /* Adjusted shadow */
    animation: float 3s infinite ease-in-out;
}

.profile-picture {
    width: 150px;
    height: 150px;
}

.username {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    position: relative;
}

.username::before,
.username::after {
    content: " ~ 6locc ~ ";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: inherit;
    color: inherit;
    overflow: hidden;
    animation: glitch 1s infinite;
}

.username::after {
    left: 2px;
    text-shadow: -2px 0 #ff0000;
    animation: glitch 1s infinite;
    animation-delay: 0.2s;
}

.bio {
    font-size: 1rem;
    color: #aaaaaa; /* Lighter gray for bio text */
    margin-bottom: 1rem;
}

.download-button {
    display: inline-block;
    margin-top: 1rem;
    padding: 1rem 2rem;
    border-radius: 5px;
    text-decoration: none;
    color: #ffffff;
    background-color: #cc3333; /* Darker red for button */
    transition: background-color 0.3s, transform 0.3s ease-out; /* Added transform transition */
}

.download-button:hover {
    background-color: #ff5555; /* Lighter red on hover */
    transform-origin: center; /* Set transform origin to center */
    transform: rotate(calc(2deg * var(--tilt-factor))); /* Tilt effect based on --tilt-factor */
}
